"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
from pathlib import Path
import dj_database_url  # ‚Üê Add this

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-5dw6$4$17aoq%ynm1#ndtgq4zb4!h&y=n5a77htnx0+9dw3fv-'

if os.environ.get('RENDER'):
    # Use PostgreSQL on Render
    DATABASES = {
        'default': dj_database_url.config(
            default=os.environ.get('DATABASE_URL')
        )
    }
else:
    # Use SQLite locally
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }

# SECURITY WARNING: don't run with debug turned on in production!
if os.environ.get('RENDER'):
    DEBUG = False
    ALLOWED_HOSTS = ['.onrender.com']
else:
    DEBUG = True
    ALLOWED_HOSTS = ['localhost', '127.0.0.1']

if not DEBUG:
    ALLOWED_HOSTS = ['.onrender.com']  # ‚Üê Critical for Render


# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
    'rest_framework_simplejwt',
    'accounts',
    'essay_writing',
    'fill_in_blanks',
    'grammar_test',
    'match_synonyms',
    'text_analysis',
]

MIDDLEWARE = [
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

CORS_ALLOWED_ORIGINS = [
    "http://127.0.0.1:5500",
    "http://localhost:5500",
    "https://creative-teacher.netlify.app"
]

CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
]

ADMIN_SITE_HEADER = "English Learning Hub Admin"
ADMIN_SITE_TITLE = "English Learning Hub Admin Portal"
ADMIN_INDEX_TITLE = "Welcome to English Learning Hub Admin"


ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases



# INSTALLED_APPS += ['rest_framework.authtoken']

REST_FRAMEWORK = {
    'DATETIME_FORMAT': '%Y-%m-%d %H:%M:%S',
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
}

from datetime import timedelta

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': True,
    'AUTH_HEADER_TYPES': ('Bearer',),
}



# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTH_USER_MODEL = 'accounts.User'


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'
USE_I18N = True

DATETIME_FORMAT = 'd.m.Y H:i:s'
USE_L10N = True
TIME_ZONE = 'Asia/Tashkent'

USE_TZ = True

# Jazzmin settings
JAZZMIN_SETTINGS = {
    "site_title": "Creative Teacher Admin",
    "site_header": "Creative Teacher",
    "welcome_sign": "Welcome to Creative Teacher Admin",
    "copyright": "Creative Teacher Ltd",
    "search_model": "accounts.User",
    "show_sidebar": True,
    "navigation_expanded": True,

    # Hide technical models
    "hide_models": [
        "authtoken.Token",      # Not used (JWT only)
        "admin.LogEntry",       # Optional
        "auth.Group",           # We use role field instead
    ],

    # Rename "Authentication and Authorization" ‚Üí "Users & Roles"
    "app_labels": {
        "auth": "Users & Roles",
    },

    # Rename models in forms
    "models": {
        "auth.User": {
            "verbose_name": "User",
            "verbose_name_plural": "Users",
        },
    },

    # Icons
    "icons": {
        "auth": "fas fa-users-cog",
        "auth.User": "fas fa-user",
        "grammar_test.Topic": "fas fa-book",
        "tex_analysis.TextAnalysisTopic": "fas fa-file-alt",
        "essay_writing.EssayTopic": "fas fa-edit",
    },

    # Order apps
    "order_with_respect_to": [
        "auth",
        "grammar_test",
        "tex_analysis",
        "match_synonyms",
        "fill_in_blank",
        "essay_writing",
    ],
    # Add a frontend link in the top navbar
    "topmenu_links": [
        # Admin index
        {"name": "Home", "url": "admin:index", "permissions": ["auth.view_user"]},

        # Your frontend main site
        {"name": "Main Site üåê", "url": "https://creative-teacher.netlify.app", "new_window": True},
    ],

    "default_icon_parents": "fas fa-chevron-circle-right",
    "default_icon_children": "fas fa-circle",
    "related_modal_active": False,
    "custom_css": None,
    "custom_js": None,
    "use_google_fonts_cdn": True,
    "show_ui_builder": True,
}

LOGOUT_REDIRECT_URL = 'https://creative-teacher.netlify.app/'

# Static files (CSS, JavaScript, Images)

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # ‚Üê Where collectstatic puts files

# WhiteNoise configuration
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# For media files (if you have uploads)
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
